<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.inspection.dao.InspectionTaskDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.inspection.entity.InspectionTaskEntity" id="inspectionTaskMap">
        <result property="id" column="id"/>
        <result property="lineId" column="line_id"/>
        <result property="turnId" column="turn_id"/>
        <result property="inspectionSpanEndDate" column="inspection_span_end_date"/>
        <result property="inspectDeviceCount" column="inspect_device_count"/>
        <result property="inspectedDeviceCount" column="inspected_device_count"/>
        <result property="inspectItemCount" column="inspect_item_count"/>
        <result property="inspectedItemCount" column="inspected_item_count"/>
        <result property="isInspected" column="is_inspected"/>
        <result property="isSpan" column="is_span"/>
        <result property="inspectedStartTime" column="inspected_start_time" />
        <result property="inspectedEndTime" column="inspected_end_time"/>
    </resultMap>

    <select id="selectByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select sum(inspected_item_count) as inspectedItemSum,sum(inspect_item_count) as inspectItemSum
        from tb_inspection_task
        where inspection_span_end_date='${inspectDate}'
    </select>

    <select id="selectAbsenceStatisticsByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select count(task.line_id) as count,line.name as lineName
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=0 and task.inspection_span_end_date >= '${inspectStartDate}' and task.inspection_span_end_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by task.line_id
    </select>

    <select id="selectAbsenceDetailByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select dept.name as deptName,line.name as lineName,case line.period_type
        when 1 then '天' when 2 then '日' when 3 then '月' end as periodName,turn.id as turnId,turn.name as turnName
        case period.turn_finish_mod when 0 then '全体完成' when 1 then '班组完成' when 2 then '个人完成' end as turnFinishMod,
        task.turn_start_time as turnStartTime,task.turn_end_time as turnEndTime
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=0 and task.inspection_span_end_date >= '${inspectStartDate}' and inspection_span_end_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        order by turn_start_time desc
    </select>

    <select id="selectAbsenceLineByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select dept.name as deptName,line.name as lineName,turn.id as turnId,turn.name as turnName,task.inspection_span_end_date,
        count(task.line_id) as inspectCount ,sum(case task.is_inspected when 1 then 1 else 0 end) as inspectedCount,
        count(task.line_id) - sum(case task.is_inspected when 1 then 1 else 0 end) as mustInspectCount,
        concat(round((count(task.line_id) - sum(case task.is_inspected when 1 then 1 else 0 end))/count(task.line_id)*100,2),'%') as inspectRate,
        '${inspectStartDate}' as inspectStartDate,'${inspectEndDate}' as inspectEndDate
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.inspection_span_end_date >= '${inspectStartDate}' and task.inspection_span_end_date &lt;= '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by line.id
    </select>

    <select id="selectAbsenceTurnByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select dept.name as deptName,line.name as lineName,turn.id as turnId,turn.name as turnName,
        count(task.line_id) as inspectCount ,sum(case task.is_inspected when 1 then 1 else 0 end) as inspectedCount,
        '${inspectStartDate}' as inspectionStartDate,'${inspectEndDate}' as inspectionEndDate
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where inspection_span_end_date >= '${inspectStartDate}' and inspection_span_end_date &lt;= '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by line.id,turn.id
    </select>

    <select id="getLineByTime" resultType="java.util.HashMap" parameterType="java.lang.String">
        SELECT
            dept. NAME AS deptName,
            line. NAME AS lineName,
            CASE line.period_type
        WHEN 1 THEN
            '天'
        WHEN 2 THEN
            '日'
        WHEN 3 THEN
            '月'
        END AS periodName,
         turn.id AS turnId,
         turn.name as turnName,
         CASE period.turn_finish_mod
        WHEN 0 THEN
            '全体完成'
        WHEN 1 THEN
            '班组完成'
        WHEN 2 THEN
            '个人完成'
        END AS turnFinishMod,
         task.inspect_item_count,
         task.inspected_item_count,
         task.turn_start_time AS turnStartTime,
         task.turn_end_time AS turnEndTime,
         task.inspected_start_time AS inspectedStartTime,
         task.inspected_end_time AS inspectedEndTime,
         TIMESTAMPDIFF(MINUTE,task.inspected_start_time,task.inspected_end_time) as haoshi
        FROM
            tb_inspection_task AS task
        LEFT JOIN tb_inspection_line AS line ON line.id = task.`line_id`
        LEFT JOIN tb_turn AS turn ON turn.id = task.turn_id
        LEFT JOIN sys_dept AS dept ON dept.dept_id = line.dept_id
        LEFT JOIN tb_inspection_period AS period ON period.line_id = line.id
        where task.inspection_span_end_date >= '${inspectStartDate}'
        and task.inspection_span_end_date &lt;= '${inspectEndDate}'
        and task.inspected_start_time >= task.turn_start_time
        and task.inspected_end_time &lt;= task.turn_end_time
        and task.inspected_start_time >0
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        order by task.id desc

    </select>


</mapper>