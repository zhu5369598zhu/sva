<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.inspection.dao.InspectionTaskDeviceDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.inspection.entity.InspectionTaskDeviceEntity" id="inspectionTaskDeviceMap">
        <result property="id" column="id"/>
        <result property="lineId" column="line_id"/>
        <result property="turnId" column="turn_id"/>
        <result property="deviceId" column="device_id"/>
        <result property="inspectionDate" column="inspection_date"/>
        <result property="inspectItemCount" column="insepct_item_count"/>
        <result property="inspectedItemCount" column="inspected_item_count"/>
        <result property="isUpdate" column="is_update"/>
    </resultMap>

    <select id="selectMissingStatisticsByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select device.device_name as deviceName, count(line.id) as count
        from tb_inspection_task_device as task
        left join tb_device as device on device.device_id=task.device_id
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=1 and task.inspected_item_count &lt; task.inspect_item_count and task.inspection_date >= '${inspectStartDate}' and task.inspection_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by device.device_id
    </select>

    <select id="selectMissingDetailByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select line.name as lineName,device.device_name as deviceName,turn.id as turnId,turn.name as turnName,
        task.inspection_date as inspectionDate,task.start_time as startTime,task.end_time as endTime,task.create_time as createTime
        from tb_inspection_task_device as task
        left join tb_device as device on device.device_id=task.device_id
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=1 and task.inspected_item_count &lt; task.inspect_item_count and task.inspection_date >= '${inspectStartDate}' and task.inspection_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        order by task.create_time desc ,line.id,turn.id asc
    </select>

    <select id="selectMissingLineByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select dept.name as deptName,line.name as lineName,task.inspection_span_end_date as inspectionDate,turn.id as turnId,
        turn.name as turnName,sum(task.inspect_device_count) as inspectDeviceCount,sum(inspected_device_count) as inspectedDeviceCount,
        sum(task.inspect_device_count) - sum(inspected_device_count) as inspectMissDeviceCount,
        concat(round(((sum(task.inspect_device_count) - sum(inspected_device_count))/sum(task.inspect_device_count))*100,2),'%') as inspectMissDeviceRate,
        sum(task.inspect_item_count) as inspectItemCount,sum(task.inspected_item_count) as inspectedItemCount,
        sum(task.inspect_item_count) - sum(inspected_item_count) as inspectMissItemCount,
        concat(round(((sum(task.inspect_item_count) - sum(inspected_item_count))/sum(task.inspect_item_count))*100,2),'%') as inspectMissItemRate,
        '${inspectStartDate}' as inspectStartDate,'${inspectEndDate}' as inspectEndDate
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=1 and task.inspected_item_count &lt; task.inspect_item_count and task.inspection_span_end_date >= '${inspectStartDate}' and task.inspection_span_end_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by line.id
        having sum(case task.is_inspected when 1 then 1 else 0 end) > 0
    </select>

    <select id="selectMissingTurnByDate" resultType="java.util.HashMap" parameterType="java.lang.String">
        select dept.name as deptName,line.name as lineName,task.inspection_span_end_date as inspectionDate,turn.id as turnId,
        turn.name as turnName,sum(task.inspect_device_count) as inspectDeviceCount,sum(inspected_device_count) as inspectedDeviceCount,
        sum(task.inspect_device_count) - sum(inspected_device_count) as inspectMissDeviceCount,
        concat(round(((sum(task.inspect_device_count) - sum(inspected_device_count))/sum(task.inspect_device_count))*100,2),'%') as inspectMissDeviceRate,
        sum(task.inspect_item_count) as inspectItemCount,sum(task.inspected_item_count) as inspectedItemCount,
        sum(task.inspect_item_count) - sum(inspected_item_count) as inspectMissItemCount,
        concat(round(((sum(task.inspect_item_count) - sum(inspected_item_count))/sum(task.inspect_item_count))*100,2),'%') as inspectMissItemRate,
        '${inspectStartDate}' as inspectStartDate,'${inspectEndDate}' as inspectEndDate
        from tb_inspection_task as task
        left join tb_inspection_line as line on line.id=task.`line_id`
        left join tb_turn as turn on turn.id=task.turn_id
        left join sys_dept as dept on dept.dept_id=line.dept_id
        left join tb_inspection_period as period on period.line_id=line.id
        where task.is_inspected=1 and task.inspected_item_count &lt; task.inspect_item_count and task.inspection_span_end_date >= '${inspectStartDate}' and task.inspection_span_end_date &lt; '${inspectEndDate}'
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
        group by line.id,turn.id
        having sum(case task.is_inspected when 1 then 1 else 0 end) > 0
    </select>

    <select id="selectByParams" resultType="java.util.HashMap" parameterType="java.lang.String">
       select  MIN(start_time) AS start_time ,MAX(end_time) as end_time FROM tb_inspection_task_device where line_id = #{lineId} and turn_id = #{turnId}
    </select>

    <select id="getDeviceByTime" resultType="java.util.HashMap" parameterType="java.lang.String">
        SELECT
        line. NAME AS lineName,
        CASE line.period_type
        WHEN 1 THEN
        '天'
        WHEN 2 THEN
        '日'
        WHEN 3 THEN
        '月'
        END AS periodName,
        CASE period.turn_finish_mod
        WHEN 0 THEN
        '全体完成'
        WHEN 1 THEN
        '班组完成'
        WHEN 2 THEN
        '个人完成'
        END AS turnFinishMod,
        device.device_name AS deviceName,
        turn.id AS turnId,
        turn. NAME AS turnName,
        dept.name AS deptName,
        task.inspection_date AS inspectionDate,
        task.inspect_item_count AS inspectItemCount,
        task.inspected_item_count AS inspectedItemCount,
        task.start_time AS startTime,
        task.end_time AS endTime,
        TIMESTAMPDIFF(
        SECOND,
        task.start_time,
        task.end_time
        ) AS haoshi,
        task.create_time AS createTime
        FROM
        tb_inspection_task_device AS task
        LEFT JOIN tb_device AS device ON device.device_id = task.device_id
        LEFT JOIN tb_inspection_line AS line ON line.id = task.`line_id`
        LEFT JOIN tb_turn AS turn ON turn.id = task.turn_id
        LEFT JOIN sys_dept AS dept ON dept.dept_id = line.dept_id
        LEFT JOIN tb_inspection_period AS period ON period.line_id = line.id
        WHERE
        task.start_time >= '${inspectStartDate}'
        AND task.end_time &lt;= '${inspectEndDate}'
        AND task.start_time > 0
        <if test="deptIds!=null">
            and dept.dept_id in
            <foreach item="item" index="index" collection="deptIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="lineId!=null">
            and line.id=#{lineId}
        </if>
    </select>
</mapper>